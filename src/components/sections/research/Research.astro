---
import BibViewer from "@components/bib-viewer/BibViewer.astro";
import Icon from '@components/icon/Icon.astro';
import { faDownload, faFile, faLink } from '@fortawesome/free-solid-svg-icons';
import type { IAuthor } from './IAuthor';
import type { IResearch } from './IResearch';
import Tooltip from '@components/tooltip/Tooltip.astro';
import SectionHeading from '../SectionHeading.astro';
import "./Research.scss";

interface Props {
  authors: Array<IAuthor>,
  research: Array<IResearch>
}

let {authors, research} = Astro.props
research = research.sort((a,b) => {
  return a.order === b.order ? 0 : (a.order < b.order ? 1 : -1)
})
---

<div class="pt-4">
  <SectionHeading>Past Research</SectionHeading>
  <div class='relative'>
    <table class='research-table w-full text-sm text-left text-white border border-zinc-500'>
      <thead class="text-xs uppercase bg-zinc-700 text-white">
        <tr>
          <th scope="col" class="px-6 py-3 text-center">Title</th>
          <th scope="col" class="px-6 py-3 text-center">Authors</th>
          <th scope="col" class="px-6 py-3 text-center">Date</th>
          <th scope="col" class="px-6 py-3 text-center">Status</th>
          <th scope="col" class="px-6 py-3 text-center">Links</th>
          <th scope="col" class="px-6 py-3 text-center">BibTex</th>
        </tr>
      </thead>
      <tbody>
        {research.map((research, i) => {
          return (
            <tr class={(i % 2 === 0 ? 'border-b bg-zinc-900 border-zinc-800' : 'border-b bg-zinc-800 border-zinc-800')}>
              <td data-name="title" class="px-6 py-4 font-semibold">
                <p>{research.title}</p>
                {research?.extra && research.extra.length > 0 
                  && <p class="font-normal font-italic">
                  {research.extra}
                </p>}
              </td>
              <td>
                {research.authors
                  .map((author) => {
                    const authorData = authors.find(
                      (x) => x.ref === author
                    );
                    if (!authorData) return <></>;
                    return authorData.firstName + ' ' + authorData.lastName;
                  })
                  .join(', ')}
              </td>
              <td data-name="date" class="px-6 py-4">{research.date}</td>
              <td data-name="for" class="px-6 py-4">{research.for}</td>
              <td data-name="links" class="px-6 py-4">
                <div class="flex flex-row space-x-2">
                  {research.sourceLink && (
                    <a href={research.sourceLink} target='_blank' rel='noreferrer'>
                      <Tooltip text="Original source">
                        <span>
                          <Icon faIcon={faLink} className="text-neutral-300 hover:text-neutral-100"></Icon>
                        </span>
                      </Tooltip>
                    </a>
                  )}
                  {research.downloadLink && (
                    <a href={research.downloadLink} target='_blank' rel='noreferrer'>
                      <Tooltip text="Preprint download">
                        <span>
                          <Icon aiIcon={"arxiv"} className="text-neutral-300 hover:text-neutral-100"></Icon>
                        </span>
                      </Tooltip>
                    </a>
                  )}
                </div>
              </td>
              <td data-name="bib" class="px-6 py-4">
                <BibViewer
                  title={research.title}
                  bib={research.bib}
                ></BibViewer>
              </td>
            </tr>
          );
        })}
      </tbody>
    </table>
  </div>
</div>