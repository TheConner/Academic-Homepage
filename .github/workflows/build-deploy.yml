# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npx -y license-report --only=prod --output=json  > static/json/Licence.json
      - run: npm run build --if-present
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: academic-homepage-${{ github.sha }}
          # A file, directory or wildcard pattern that describes what to upload
          path: public
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: academic-homepage-${{ github.sha }}
      - name: Create SSH key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      - name: Deploy
        run: |
          tar -czvf ../deploy.tar.gz .
          scp ../deploy.tar.gz ${{secrets.DEPLOY_HOST}}:~/deploy.tar.gz
          ssh ${{secrets.DEPLOY_HOST}} 'rm -rf public_html/* && tar -mxzf deploy.tar.gz -C public_html'

